{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_private_method_get.mjs","node_modules/@swc/helpers/src/_check_private_redeclaration.mjs","node_modules/@swc/helpers/src/_class_private_method_init.mjs","src/js/galleryListMarkup.js","src/index.js","src/js/elementsRefs.js","src/js/fetchApi.js"],"sourcesContent":["export default function _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return fn;\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateMethodInit(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\n","export default class CreateMarkup {\n    constructor(refs){\nthis.refs=refs;\nthis.dataArray=[];\nthis.isMarkup=false;\n    }\n\n    insertStartMarkup (string,position=\"divGallery\") {\n        this.refs[position].innerHTML=string;\n    }\n\n\n    #insertContinueMarkup (string) {\n      this.refs.divGallery.insertAdjacentHTML('beforeend',string)\n    }\n    createListMarkup () {\n       \n        const stringListMarkup = this.dataArray.hits.map(({webformatURL,largeImageURL,tags,likes,views,comments,downloads})=>\n        `<div class=\"photo-card\">\n<img width = 50 src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n<div class=\"info\">\n  <p class=\"info-item\">\n    <b>Likes ${likes}</b>\n  </p>\n  <p class=\"info-item\">\n    <b>Views ${views}</b>\n  </p>\n  <p class=\"info-item\">\n    <b>Comments ${comments}</b>\n  </p>\n  <p class=\"info-item\">\n    <b>Downloads ${downloads}</b>\n  </p>\n</div>\n</div>`).join('');\n\nthis.isMarkup?this.#insertContinueMarkup(stringListMarkup):this.insertStartMarkup(stringListMarkup);\n\n    }\n\n    createButtonMarkup () {\n      console.log(\"555\")\n      const button =`<button type=\"button\" class=\"load-more\">Load more</button>`;\n            return this.insertStartMarkup(button,'buttonGallery')\n    }\n  \n\n get data () {\n    return this.dataArray;\n }\n\n set data (newdata) {\n    this.dataArray=newdata;\n }\n\n get addItems () {\n  return this.isMarkup\n }\n\n set addItems (boolean) {\n  this.isMarkup=boolean;\n }\n}\n\n","import elementsRefs from './js/elementsRefs';\nimport ApiService from './js/fetchApi';\nimport CreateMarkup from './js/galleryListMarkup';\n\n\nconst refs = elementsRefs();\n\nconst apiService = new ApiService ();\nconst createMarkup = new CreateMarkup (refs);\nlet itemsOnPage = 50;\nlet previousQuery = '' ;\n\nrefs.form.addEventListener('submit', handleFormSubmit)\nrefs.buttonGallery.addEventListener('click', handleButtonClick)\n\nfunction handleFormSubmit (e) {\n        e.preventDefault();\n        const searchQuery = e.currentTarget.searchQuery.value.trim()\n        if(!searchQuery){\nconsole.log(\"222\")\ncreateMarkup.insertStartMarkup(\"\",\"buttonGallery\");\ncreateMarkup.insertStartMarkup(\"\")\nreturn\n        }\n\n        if(previousQuery===searchQuery){\n            console.log(\"1111\")\n            return\n        }\n\n        previousQuery = searchQuery;\n        apiService.value=searchQuery;\n        apiService.itemsOnPage=itemsOnPage;\n        apiService.page=1;\n        createMarkup.isMarkup=false;\n        fetchApiData ()\n        \n}\n\n\nfunction handleButtonClick (e) {\n    if(!(e.target.nodeName==='BUTTON')){\n        return\n    }\napiService.page+=1;\ncreateMarkup.isMarkup=true;\nfetchApiData ()\n}\n\n\nfunction fetchApiData () {\n    apiService.fetchApi().then(data=>{\n        if(!data.hits.length){\n            return Promise.reject(new Error())\n                       }\n        createMarkup.data=data\n        createMarkup.createListMarkup()\n        console.log(data.hits.length)\n        if(!(data.hits.length===itemsOnPage)){\n            console.log(\"666\")\n            createMarkup.insertStartMarkup(\"\",\"buttonGallery\")  \n          return\n        }\n        if(apiService.page===1){\n            createMarkup.createButtonMarkup()\n        }\n       \n     })\n        .catch(error=>console.log(\"Sorry, there are no images matching your search query. Please try again.\"))\n}\n\n","export default function refs () {\n return {\n    form:document.querySelector('#search-form'),\n    divGallery:document.querySelector('.gallery'),\n    buttonGallery:document.querySelector('.button-gallery')\n }\n}","const KEY = \"24494931-7dc5820272f9876b2770bf0f4\";\nconst BASE_URL = \"https://pixabay.com/api/\";\n\n\n\nexport default class ApiService {\n    \n    constructor(){\n        this.searchValue=\"\";\n        this.searchPage=1;\n        this.perPage=40\n    }\n\n    fetchApi () {\n        return  fetch(`${BASE_URL}?key=${KEY}&q=${this.searchValue}&image_type=photo&orientation=horizontal&safesearch=false&page=${this.searchPage}&per_page=${this.perPage}`)\n        .then(response=>{if(response.status === 404){\n            return Promise.reject(new Error());\n        }\n        return response.json()})\n}\n\nget value () {\n   return this.searchValue;\n}\nset value (newValue) {\n    this.searchValue=newValue;\n}\nget page () {\n    return this.searchPage\n}\nset page (newPage) {\n this.searchPage=newPage\n}\nget itemsOnPage () {\n    return this.perPage\n}\nset itemsOnPage (newItemsOnPage) {\n  this.perPage=newItemsOnPage;\n}\n\n}\n\n"],"names":["$f6e04a1a217e0d4d$export$2e2bcd8739ae039","receiver","privateSet","fn","has","TypeError","$dba1998b20ced464$export$2e2bcd8739ae039","obj","privateCollection","$2dc63754c091085f$export$2e2bcd8739ae039","add","$bc0ef83fe49da303$var$_insertContinueMarkup","WeakSet","$bc0ef83fe49da303$var$insertContinueMarkup","string","this","refs","divGallery","insertAdjacentHTML","$b8f9b7833fa37166$var$refs","form","document","querySelector","buttonGallery","$b8f9b7833fa37166$var$apiService","fetchApi","fetch","searchValue","searchPage","perPage","then","response","status","Promise","reject","Error","json","value","newValue","page","newPage","itemsOnPage","newItemsOnPage","constructor","$b8f9b7833fa37166$var$createMarkup","insertStartMarkup","position","innerHTML","createListMarkup","stringListMarkup","dataArray","hits","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","isMarkup","call","createButtonMarkup","console","log","data","newdata","addItems","boolean","$b8f9b7833fa37166$var$previousQuery","$b8f9b7833fa37166$var$fetchApiData","length","catch","error","addEventListener","e","preventDefault","searchQuery","currentTarget","trim","target","nodeName"],"version":3,"file":"index.1890c5bd.js.map"}